apiVersion: v1
kind: Namespace
metadata:
  name: springrestbootk8s-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springrestbootk8s-deployment
  namespace: springrestbootk8s-ns
spec:
  selector:
    matchLabels:
      app: springrestbootk8s-app
  replicas: 3 # tells deployment to run 3 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: springrestbootk8s-app
    spec:
      containers:
      - name: springrestbootk8s-app
        image: docker.io/krishnamanchikalapudi/springrestbootk8:latest
        ports:
        - containerPort: 8080
          name: server
        - containerPort: 8081
          name: management
---
apiVersion: v1
kind: Service
metadata:
  name: springrestbootk8s-service
  namespace: springrestbootk8s-ns
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  - port: 8081
    targetPort: 8081
    name: management
  selector:
    app: springrestbootk8s-app
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: springrestbootk8s-ingress
  namespace: springrestbootk8s-ns
  annotations:
    kubernetes.io/ingress.allow-http: "true"
spec:
  #tls:
  #- secretName: springrestbootk8s-tls-secret
  backend:
    serviceName: springrestbootk8s-service
    servicePort: 8080
---
apiVersion: v1
kind: Secret
metadata:
  name: springrestbootk8s-tls-secret
  namespace: default
data:
  tls.crt: hello #base64 hash of your cert
  tls.key: password #base64 hash of your key
type: Opaque
---